#Nicholash Bedi
#Consecutive Prime Sum
import itertools
import math
import time
start_time = time.clock()

def check_prime(prime):
    if prime < 1.1:
        return False
    if prime != int(prime):
        return False
    if prime == 2:
        return True
    if prime%2 == 0:
        return False
    for divisor in range(3,int(math.sqrt(prime)+1),2):
        if prime%divisor == 0:
            return False
    return True

def list_of_primes(below):
    l = [2]
    for x in range(3,below+1,2):
        if check_prime(x) == True:
            l.append(x)
    return l

def sum_of_primes(below_max_prime):
    lp = list(list_of_primes(below_max_prime))
    l=[2]
    for a in range(1,len(lp)):
        l.append(lp[a]+l[a-1])
    l.insert(0,0)
    return l

below = 1000000
lp =  list(sum_of_primes(below))
print "time to get sum of primes in seconds is " + str(float(time.clock()-start_time))
s=0
b=1
grt=0
cumsum=0
while s<len(lp)-grt:
    while lp[b]-lp[s] < below:
        if check_prime(lp[b]-lp[s]) == True and b-s > grt:
            grt = b-s
            cumsum = lp[b]-lp[s]
        b+=1
    s+=1
    b=s+grt
print grt
print cumsum


print "time taken in seconds is " +str(float(time.clock()-start_time))

'''
time to get sum of primes in seconds is 3.85592539317
543
997651
time taken in seconds is 3.89482651396
'''